import { getReportDataObj } from "tttc-common/morphisms/pipeline";
import * as schema from "tttc-common/schema";

const llmPipelineJson = `{"model":"gpt-4-turbo-preview","data":[{"id":"1","comment":"More green spaces and parks"},{"id":"22","comment":"More affordable housing"},{"id":"34","comment":"More job opportunities"},{"id":"62","comment":"More jobs"}],"title":"test","question":"","description":"","systemInstructions":"","clusteringInstructions":"","extractionInstructions":"","batchSize":10,"dedupInstructions":"","filename":"test-1718663339961","tree":[{"topicName":"Urban Development","topicShortDescription":"Covers aspects related to the overall improvement and planning of urban areas.","subtopics":[{"subtopicName":"Employment Growth","subtopicShortDescription":"Focuses specifically on expanding the job market and increasing the number of available jobs.","claims":[{"claim":"Urban development should prioritize employment growth.","quote":"More jobs","topicName":"Urban Development","subtopicName":"Employment Growth","commentId":"62","claimId":"62-0","duplicates":[{"claim":"Expanding the job market should be a priority in urban development.","quote":"More job opportunities","topicName":"Urban Development","subtopicName":"Employment Growth","commentId":"34","claimId":"34-0","duplicated":true,"duplicates":[]}]}],"claimsCount":2,"subtopicId":"subtopic-0-0"},{"subtopicName":"Affordable Housing","subtopicShortDescription":"Addresses the need for housing options that are economically accessible to a wider range of people.","claims":[{"claim":"There should be more affordable housing options available.","quote":"More affordable housing","topicName":"Urban Development","subtopicName":"Affordable Housing","commentId":"22","claimId":"22-0","duplicates":[]}],"claimsCount":1,"subtopicId":"subtopic-0-1"}],"claimsCount":3,"topicId":"topic-0"}],"costs":0.039689999999999996,"start":1718663340290,"unmatchedClaims":[],"prompt_tokens":2694,"completion_tokens":425,"end":1718663353548,"duration":"13.258 seconds"}`;

const llmPipeline = schema.llmPipelineOutput.parse(JSON.parse(llmPipelineJson));

export const reportData: schema.ReportDataObj = getReportDataObj(llmPipeline);
